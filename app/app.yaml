apiVersion: v1
kind: ConfigMap
metadata:
  namespace: flask-application
  name: flask-config
data:
  PGDB_HOST: postgres-db.postgres-database.svc.cluster.local
  REDIS_HOST: redis-service.redis-cache.svc.cluster.local
  PGDB_NAME: mydb
---
apiVersion: v1
kind: Secret
metadata:
  namespace: flask-application 
  name: flask-secret
data:
  PGDB_USER: cG9zdGdyZXM=
  PGDB_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-application
spec:
  replicas: 1
  selector:
    matchLabels:
      name: flask-app      
  template:
    metadata:
      name: flask-app
      labels:
         name: flask-app
    spec:
      containers:
        - name: flask
          image: vishwas98/my-flask-app:latest
          env:
          - name: PGDB_USER
            valueFrom:
              secretKeyRef:
                name: flask-secret
                key: PGDB_USER
          - name: PGDB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: flask-secret
                key: PGDB_PASSWORD
          - name: PGDB_HOST
            valueFrom:
              configMapKeyRef:
                name: flask-config
                key: PGDB_HOST
          - name: REDIS_HOST
            valueFrom:
              configMapKeyRef:
                name: flask-config
                key: REDIS_HOST
          - name: PGDB_NAME
            valueFrom:
              configMapKeyRef:
                name: flask-config
                key: PGDB_NAME
          ports:
            - containerPort: 5000

---

apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
  namespace: flask-application
spec:
  selector:
    name: flask-app
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: LoadBalancer
